---
site_title: Yarn
site_description: Dependency management veloce, affidabile e sicuro.
site_nav_getting_started: Guida introduttiva
site_nav_documentation: Documentazione
site_nav_packages: Pacchetti
site_nav_blog: Blog
site_bsd_license: Distribuito sotto licenza BSD
site_code_of_conduct: Codice di condotta
site_edit_this_page: Modifica questa pagina
blog_title: Yarn Blog
guide_additional_reading: Informazioni aggiuntive
iframe_github_stars: GitHub Stars
homepage_tagline: Dependency management veloce, affidabile e sicuro.
homepage_feature_fast_title: Ultra veloce.
homepage_feature_fast_description: |
  Yarn crea una cache per ogni pacchetto che scarica, così non deve più scaricarlo di nuovo. Inoltre parallelizza le operazioni per ottimizzare l'utilizzo delle risorse, così i tempi di installazione sono più veloci che mai.
homepage_feature_fast_image_alt: Immagine segnaposto generica
homepage_feature_secure_title: Mega sicuro.
homepage_feature_secure_description: |
  Yarn utilizza checksum per verificare l'integrità di ogni pacchetto installato prima che il suo codice venga eseguito.
homepage_feature_secure_image_alt: Immagine segnaposto generica
homepage_feature_reliable_title: Super affidabile.
homepage_feature_reliable_description: |
  Grazie all'utilizzo di un formato lockfile dettagliato ma conciso e di un algoritmo deterministico per le installazioni, Yarn è in grado di garantire che un'installazione funzionante su un sistema operi equivalentemente su qualsiasi altro sistema.
homepage_feature_reliable_image_alt: Immagine segnaposto generica
homepage_c2a_text: Che cosa stai aspettando?
homepage_c2a_button: Per iniziare
homepage_install_button: Installa Yarn
homepage_featurette_offline_title: Modalità Offline
homepage_featurette_offline_description: |
  Se hai già installato un pacchetto, non occorre una connessione internet per installarlo nuovamente.
homepage_featurette_deterministic_title: Deterministico
homepage_featurette_deterministic_description: |
  Le stesse dipendenze saranno installate in maniera identica su ogni macchina indipendentemente dall'ordine di installazione.
homepage_featurette_network_performance_title: Performance network
homepage_featurette_network_performance_description: |
  Yarn accoda in maniera efficiente le richieste ed evita l'effetto cascata per ottimizzare l'utilizzo della connessione.
homepage_featurette_npm_title: Gli stessi pacchetti
homepage_featurette_npm_description: |
  Installa qualsiasi pacchetto da npm e mantieni il tuo workflow invariato.
homepage_featurette_network_resillience_title: Network Resilience
homepage_featurette_network_resillience_description: |
  L'errore di una singola richiesta non farà fallire l'intera installazione, la richiesta sarà eseguita nuovamente.
homepage_featurette_flat_mode_title: Modalità piatta
homepage_featurette_flat_mode_description: |
  Qualunque discrepanza nelle versioni delle dipendenze viene risolta a una singola versione per evitare di creare duplicati.
docs_getting_started_title: Guida introduttiva
docs_getting_started_description: |
  Non hai mai utilizzato un gestore di pacchetti o non conoscevi Yarn? Bastano un paio di minuti per installarlo e iniziare subito.
docs_index: Documentazione
docs_getting_started: Guida introduttiva
docs_install: Installazione
docs_usage: Utilizzo
docs_yarn_workflow_title: Il Workflow di Yarn
docs_yarn_workflow_description: |
  Come si utilizza Yarn? Ci sono workflow di base per creare ed utilizzare pacchetti Yarn che ti aiuteranno ad essere produttivo in fretta.
docs_yarn_workflow: Il Workflow di Yarn
docs_creating_a_project: Creare un nuovo progetto
docs_managing_dependencies: Gestire le dipendenze
docs_installing_dependencies: Installare le dipendenze
docs_version_control: Utilizzare il controllo versione
docs_cli_title: Comandi CLI
docs_cli_description: |
  Yarn presenta una ricca serie di comandi che permettono l'installazione, amministrazione e pubblicazione di pacchetti, e altro ancora.
docs_cli_index: Introduzione alla CLI
docs_cli_add: yarn add
docs_cli_add_description: |
  Quando vuoi utilizzare un pacchetto, devi prima aggiungerlo alle dipendenze. Il comando `yarn add` lo installa nel progetto.
docs_cli_bin: yarn bin
docs_cli_cache: yarn cache
docs_cli_check: yarn check
docs_cli_clean: yarn clean
docs_cli_config: yarn config
docs_cli_generate_lock_entry: yarn generate-lock-entry
docs_cli_global: yarn global
docs_cli_info: yarn info
docs_cli_init: yarn init
docs_cli_install: yarn install
docs_cli_licenses: yarn licenses
docs_cli_link: yarn link
docs_cli_login: yarn login
docs_cli_logout: yarn logout
docs_cli_ls: yarn ls
docs_cli_outdated: yarn outdated
docs_cli_owner: yarn owner
docs_cli_pack: yarn pack
docs_cli_publish: yarn publish
docs_cli_remove: yarn remove
docs_cli_run: yarn run
docs_cli_self_update: yarn self-update
docs_cli_tag: yarn tag
docs_cli_tag_description: |
  I tag servono a pubblicare versioni dei pacchetti con un'etichetta. Gli utenti possono quindi usare questa per installarlo invece che un numero di versione.
docs_cli_team: yarn team
docs_cli_test: yarn test
docs_cli_unlink: yarn unlink
docs_cli_upgrade: yarn upgrade
docs_cli_version: yarn version
docs_cli_why: yarn why
docs_migrating_from_npm_title: Migrazione dal client npm
docs_migrating_from_npm_description: |
  Yarn è compatibile con tante funzionalità di npm, incluso il formato dei metadati del pacchetto. Questo permette una facile migrazione.
docs_migrating_from_npm: Migrazione da npm
docs_creating_a_package_title: Creazione di un pacchetto
docs_creating_a_package_description: |
  Creare e pubblicare un pacchetto yarn richiede pochi comandi e impostazioni, permettendoti di concentrarti sul codice.
docs_creating_a_package: Creare un pacchetto
docs_publishing_a_package: Pubblicare pacchetto
docs_dependencies_title: Dipendenze e Versioni
docs_dependencies_description: |
  Utilizzando Yarn si è sempre a contatto con le dipendenze di progetto. Vediamo che tipi e versioni differenti esistono.
docs_dependencies: Dipendenze e versioni
docs_dependency_types: Tipi di dipendenze
docs_dependency_versions: Versioni delle dipendenze
docs_dependency_versions_description: |
  I pacchetti in Yarn seguono il Versionamento Semantico, detto anche “semver”. Quando installi un nuovo pacchetto, sarà aggiunto assieme a un range di versioni semver.
docs_configuration_title: Configurazione
docs_configuration_description: |
  Impara ad utilizzare il file package.json per configurare i pacchetti e le dipendenze
docs_configuration_index: Configurazione
docs_configuration_package_json: package.json
docs_configuration_yarn_lock: yarn.lock
yarn_organization_title: Organizzazione Yarn
yarn_organization_description: |
  L'organizzazione Yarn è una collaborazione tra diverse company ed individui dedicati a migliorare l'esperienza nella gestione dei pacchetti.
organization: Organizzazione
code_of_conduct: Codice di condotta
contributing: Contribuire
translations: Traduzioni
release_process: Processo di rilascio
governance: Governance
users: Utenti Yarn
compare: Confronta le performance di Yarn
blog: Blog
users_lead: Incontra tutti gli utenti Yarn.
users_description: >
  I loghi sono aggiunti dai rappresentanti delle company o dei progetti. Potrebbero fare uso o meno di Yarn per i loro progetti, ma di sicuro lo utilizzano da qualche parte.
users_add_prompt: Vuoi aggiungere la tua company o il tuo progetto?
users_add_pr: Apri una pull request
users_add_requirements_image: >
  I loghi devono essere file SVG (preferito) o PNG, di dimensione 500x200px (2.5x1), ottimizzate con svgo, ImageOptim o un altro tool di ottimizzazione immagini.
users_add_requirements_logo: >
  Si prega di usare una versione del logo the funzioni bene su sfondo bianco.
install_intro: >
  Prima di iniziare ad usare Yarn, devi installarlo sul tuo sistema. Ci sono un numero sempre crescente di modi per installare Yarn:
install_select_platform: Indica la tua piattaforma qui sopra
install_os_mac: macOS
install_os_windows: Windows
install_os_linux: Linux
install_os_alternatives: Alternative
install_test: "Verifica che Yarn sia installato lanciando il comando:"
install_problems_title: Problemi?
install_problems_description: >
  Se non riesci ad installare Yarn con nessuno dei metodi indicati, per favore cerca su GitHub per issue esistenti oppure aprine una nuova.
install_problems_search: Cerca issue esistenti
install_problems_new_issue: Apri una nuova issue
docs_nightly: Builds notturne
install_nightly_intro: >
  Le builds notturne sono le migliori e più recenti versioni di Yarn, buildate usando l'ultimissima versione del source code di Yarn. Queste build sono utili per testare nuove features o verificare bug fixes che non sono stati ancora rilasciati in una release stabile. Tuttavia, per queste build <strong> non è garantita stabilità </strong> e potrebbero contenere bugs.
install_nightly_learn_more: Guarda come installare le build nightly
nightly_latest_version: Ultima versione
nightly_older_versions: Versioni precedenti
nightly_select_build_type: Seleziona un tipo di build per vedere quelle precedenti
install_table_name: Nome
install_table_type: Tipo
install_table_size: Dimensione
install_table_date: Data
loading: Caricamento...
install_file:
  deb: Pacchetto Debian
  js: JS Standalone
  js-legacy: JS Standalone (Node < 4.0)
  msi: Windows installer
  rpm: RPM
  tar: Tarball
docs_install_ci: Continuous Integration
ci_intro: >
  Yarn può essere utilizzato facilmente in svariati sistemi di continuous integration. Per velocizzare le build, la directory di cache di Yarn può essere condivisa tra quest'ultime.
ci_select_platform: Seleziona tra le opzioni il sistema di continuous integration che utilizzi
ci_appveyor: AppVeyor
ci_circle: CircleCI
ci_codeship: Codeship
ci_travis: Travis
ci_semaphore: Semaphore
