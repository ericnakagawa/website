---
site_title: Yarn
site_description: Schnelle, zuverlässige und sichere Abhängigkeitsverwaltung.
site_nav_getting_started: Erste Schritte
site_nav_documentation: Dokumentation
site_nav_packages: Pakete
site_nav_blog: Blog
site_bsd_license: Vertrieben unter BSD-Lizenz
site_code_of_conduct: Code of Conduct
site_edit_this_page: Diese Seite bearbeiten
blog_title: Yarn Blog
guide_additional_reading: Zusätzliche Literatur
iframe_github_stars: GitHub Stars
homepage_tagline: Schnelle, zuverlässige und sichere Abhängigkeitsverwaltung.
homepage_feature_fast_title: Super schnell.
homepage_feature_fast_description: |
  Yarn speichert jedes heruntergeladene Paket, sodass es nicht erneut heruntergeladen werden muss. Durch Parallelisierung der Downloads werden zudem Ressourcen besser ausgeschöpft und die Installationszeit minimiert.
homepage_feature_fast_image_alt: Generisches Platzhalter Bild
homepage_feature_secure_title: Mega sicher.
homepage_feature_secure_description: |
  Yarn verwendet Prüfsummen zur Validierung jedes installierten Pakets, bevor der Code ausgeführt wird.
homepage_feature_secure_image_alt: Generisches Platzhalter Bild
homepage_feature_reliable_title: Super zuverlässig.
homepage_feature_reliable_description: |
  Mit einem detaillierten aber dennoch übersichtlichen Logfile Format und einem deterministischen Algorithmus für Installationen ist Yarn in der Lage, die Lauffähigkeit der Installation auf ihrem System genauso zu garantieren, wie auf anderen Systemen.
homepage_feature_reliable_image_alt: Generisches Platzhalter Bild
homepage_c2a_text: Worauf warten Sie noch?
homepage_c2a_button: Auf geht's
homepage_install_button: Yarn installieren
homepage_featurette_offline_title: Offline Modus
homepage_featurette_offline_description: |
  Wenn Sie ein Paket bereits installiert haben, können Sie es zu einem späteren Zeitpunkt ohne eine Internetverbindung erneut installieren.
homepage_featurette_deterministic_title: Deterministisch
homepage_featurette_deterministic_description: |
  Die Installation einer Abhängigkeit erfolgt immer auf die gleiche Art und Weise, unabhängig von der Installationsreihenfolge, dem Betriebssystem und der Hardware.
homepage_featurette_network_performance_title: Netzwerk-Performance
homepage_featurette_network_performance_description: |
  Netzwerkanfragen werden in einer optimierten Warteschlange aufgearbeitet, um sequentielle Netzwerkanfragen zu minimieren und optimieren.
homepage_featurette_npm_title: Gleiche Pakete
homepage_featurette_npm_description: |
  Sie können jedes npm Paket installieren und ihren Workflow beibehalten.
homepage_featurette_network_resillience_title: Netzwerkstabilität
homepage_featurette_network_resillience_description: |
  Schlägt ein Request fehl wird er wiederholt. Die Installation wird nicht abgebrochen.
homepage_featurette_flat_mode_title: Flat Modus
homepage_featurette_flat_mode_description: |
  Versionskonflikte werden aufgelöst, sodass nur eine Version installiert wird.
docs_getting_started_title: Erste Schritte
docs_getting_started_description: |
  Noch nie einen Paket Manager benutzt oder ist Yarn neu für Sie? Der Start gelingt in nur wenige Minuten.
docs_index: Dokumentation
docs_getting_started: Erste Schritte
docs_install: Installation
docs_usage: Nutzung
docs_yarn_workflow_title: Der Yarn Workflow
docs_yarn_workflow_description: |
  Wie verwende ich Yarn? Es gibt grundlegende Workflows für Erstellung und Nutzung von Yarn Paketen, mit denen Sie schnell produktiv sind.
docs_yarn_workflow: Der Yarn Workflow
docs_creating_a_project: Ein neues Projekts anlegen
docs_managing_dependencies: Verwalten von Abhängigkeiten
docs_installing_dependencies: Installation von Abhängigkeiten
docs_version_control: Arbeiten mit Versionskontrolle
docs_cli_title: CLI Befehle
docs_cli_description: |
  Yarn verfügt über viele Kommandos zu installieren, administrieren, veröffentlichen usw. von Paketen.
docs_cli_index: CLI Einführung
docs_cli_add: yarn add
docs_cli_add_description: |
  Wenn Sie ein anderes Paket verwenden möchten, müssen Sie es zuerst Ihren Abhängigkeiten hinzufügen, um es anschließend mit `yarn add` in Ihrem Projekt zu installieren.
docs_cli_bin: yarn bin
docs_cli_cache: yarn cache
docs_cli_check: yarn check
docs_cli_clean: yarn clean
docs_cli_config: yarn config
docs_cli_generate_lock_entry: yarn generate-lock-entry
docs_cli_global: yarn global
docs_cli_info: yarn info
docs_cli_init: yarn init
docs_cli_install: yarn install
docs_cli_licenses: yarn licenses
docs_cli_link: yarn link
docs_cli_login: yarn login
docs_cli_logout: yarn logout
docs_cli_ls: yarn ls
docs_cli_outdated: yarn outdated
docs_cli_owner: yarn owner
docs_cli_pack: yarn pack
docs_cli_publish: yarn publish
docs_cli_remove: yarn remove
docs_cli_run: yarn run
docs_cli_self_update: yarn self-update
docs_cli_tag: yarn tag
docs_cli_tag_description: |
  Tags sind eine Möglichkeit, bestimmte Versionen Ihres Pakets mit einem Label bereitzustellen. Benutzer Ihres Pakets können es anhand dieses Tags installieren.
docs_cli_team: yarn team
docs_cli_test: yarn test
docs_cli_unlink: yarn unlink
docs_cli_upgrade: yarn upgrade
docs_cli_version: yarn version
docs_cli_why: yarn why
docs_migrating_from_npm_title: Migration aus npm client
docs_migrating_from_npm_description: |
  Yarn versteht direkt viele Funktionen von npm, einschließlich des Paket Metadaten Format, so dass eine problemlose Migration möglich ist.
docs_migrating_from_npm: Migration von npm
docs_creating_a_package_title: Erstellen eines Pakets
docs_creating_a_package_description: |
  Erstellen und veröffentlichen eine Yarn Pakets können mit wenigen Befehlen und Konfigurationseinstellungen erfolgen, fokussieren Sie sich auf Ihren eigentlichen Code.
docs_creating_a_package: Erstellen eines Pakets
docs_publishing_a_package: Veröffentlichen eines Pakets
docs_dependencies_title: Abhängigkeiten & Versionen
docs_dependencies_description: |
  Mit yarn arbeiten Sie die ganze Zeit mit Abhängigkeiten. Lassen Sie uns einen Blick auf die verschiedenen Typen und Versionen von Abhängigkeiten werfen.
docs_dependencies: Abhängigkeiten und Versionen
docs_dependency_types: Art der Abhängigkeit
docs_dependency_versions: Versionen von Abhängigkeiten
docs_dependency_versions_description: |
  Pakete in yarn folgen der Semantischen Versionierung, auch bekannt als "Semver". Wenn Sie ein neues Paket installieren wird es gemäß des Semver Versionsbereich hinzugefügt.
docs_configuration_title: Konfiguration
docs_configuration_description: |
  Lernen Sie, wie Sie Ihre Pakete und Abhängigkeiten in der package.json konfigurieren
docs_configuration_index: Konfiguration
docs_configuration_package_json: package.json
docs_configuration_yarn_lock: yarn.lock
yarn_organization_title: Yarn Organisation
yarn_organization_description: |
  Die Yarn Organisation ist eine Zusammenarbeit vieler Firmen und Privatpersonen, um die Abhängigkeitsverwaltung zu verbessern.
organization: Organisation
code_of_conduct: Code of Conduct
contributing: Mitwirken
translations: Übersetzungen
release_process: Release-Prozess
governance: Führung
users: Yarn Benutzer
compare: Yarn Performance-Vergleich
blog: Blog
users_lead: Lerne alle Yarn Nutzer kennen.
users_description: >
  Logos wurden von Unternehmen Projektverantwortlichen hinzugefügt. Diese verwenden yarn eventuell noch nicht als einzigen Paketmanager, sicher nutzen sie yarn aber in ihren Projekten.
users_add_prompt: Möchten Sie Ihr eigenes Unternehmen oder Projekt hinzufügen?
users_add_pr: Öffnen Sie einen Pull Request
users_add_requirements_image: >
  Logos müssen mindestens 500x200px (2.5x1) sein. SVG bevorzugt oder PNG-Bild mit Svgo, ImageOptim oder einem anderen Bild-Optimierer optimiert.
users_add_requirements_logo: >
  Bitte verwenden Sie ein Logo das auf einem weißen Hintergrund gut zu sehen ist.
install_intro: >
  Bevor Sie yarn nutzen können, müssen Sie es auf Ihrem System installieren. Es gibt eine wachsende Anzahl von Möglichkeiten dies zu tun:
install_select_platform: Wählen Sie oben Ihre Plattform
install_os_mac: macOS
install_os_windows: Windows
install_os_linux: Linux
install_os_alternatives: Alternativen
install_test: "Überprüfe wie folgt, ob Yarn installiert ist:"
install_problems_title: Probleme?
install_problems_description: >
  Sollten yarn nicht über einen der angebotenen wege installieren können, suchen Sie bitte auf GitHub nach einem vorhandenem Issue oder öffnen Sie einen neue.
install_problems_search: Suche nach vorhandenem issue
install_problems_new_issue: Öffnen Sie einen neuen issue
docs_nightly: Nightly Builds
install_nightly_intro: >
  Nightly Builds sind die neuesten und letzten Versionen von yarn, gebaut mit dem neuesten Quellcode. Nightly Builds sind nützlich, um neue Funktionen oder Bug Fixes zu testen, bevor sie Teil eines stabilen Release werden. Aber diese Builds sind <strong>nicht voll getestet</strong> und können Fehler enthalten.
install_nightly_learn_more: Erfahren Sie wie Sie nightly builds installieren
nightly_latest_version: Neuste Version
nightly_older_versions: Ältere Versionen
nightly_select_build_type: Wählen Sie oben einen Buildtyp um ältere Versionen zu sehen
install_table_name: Name
install_table_type: Typ
install_table_size: Größe
install_table_date: Datum
loading: Laden...
install_file:
  deb: Debian Paket
  js: Unabhängiges JS
  js-legacy: Unabhängiges JS (Node < 4.0)
  msi: Windows Installer
  rpm: RPM
  tar: Tar Archiv
docs_install_ci: Continuous Integration
ci_intro: >
  Yarn kann leicht in verschiedenen continuous-Integration-Systeme verwendet werden. Um Builds zu beschleunigen, kann das Yarn-Cache-Verzeichnis für verschiedene Builds gespeichert werden.
ci_select_platform: Wählen Sie Ihr Continuous Integration System aus den oben genannten Optionen
ci_appveyor: AppVeyor
ci_circle: CircleCI
ci_codeship: Codeship
ci_travis: Travis
ci_semaphore: Semaphore
